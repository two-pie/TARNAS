package it.unicam.cs.twopier.target;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class RNASecondaryStructureLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, INDEX=5, ZERO_INDEX=6, IUPAC_CODE=7, NUCLEOTIDE=8, 
		DBN=9, LINECT=10, LINE1BPSEQ=11, LINE2BPSEQ=12, LINE3BPSEQ=13, LINE4BPSEQ=14, 
		LINE_COMMENT=15, WS=16;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "INDEX", "ZERO_INDEX", "IUPAC_CODE", 
			"NUCLEOTIDE", "DBN_CODE", "DBN", "LINECT", "NONEWLINE", "LINE1BPSEQ", 
			"LINE2BPSEQ", "LINE3BPSEQ", "LINE4BPSEQ", "LINE_COMMENT", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "';'", "'('", "','", "')'", null, "'0'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, "INDEX", "ZERO_INDEX", "IUPAC_CODE", "NUCLEOTIDE", 
			"DBN", "LINECT", "LINE1BPSEQ", "LINE2BPSEQ", "LINE3BPSEQ", "LINE4BPSEQ", 
			"LINE_COMMENT", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public RNASecondaryStructureLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "RNASecondaryStructure.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0010\u00cd\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002"+
		"\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0005\u00040\b\u0004"+
		"\n\u0004\f\u00043\t\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006"+
		"\u0001\u0007\u0004\u0007:\b\u0007\u000b\u0007\f\u0007;\u0001\b\u0001\b"+
		"\u0001\t\u0004\tA\b\t\u000b\t\f\tB\u0001\n\u0005\nF\b\n\n\n\f\nI\t\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0003\nY\b\n\u0001\n\u0005\n\\\b\n"+
		"\n\n\f\n_\t\n\u0001\n\u0003\nb\b\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b"+
		"\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0001\f\u0005\fr\b\f\n\f\f\fu\t\f\u0001\f\u0003\fx\b\f\u0001\f\u0001"+
		"\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001"+
		"\r\u0001\r\u0005\r\u0086\b\r\n\r\f\r\u0089\t\r\u0001\r\u0003\r\u008c\b"+
		"\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0005\u000e\u009b\b\u000e\n\u000e\f\u000e\u009e\t\u000e\u0001\u000e"+
		"\u0003\u000e\u00a1\b\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0005\u000f\u00af\b\u000f\n\u000f\f\u000f\u00b2"+
		"\t\u000f\u0001\u000f\u0003\u000f\u00b5\b\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u0010\u0001\u0010\u0005\u0010\u00bb\b\u0010\n\u0010\f\u0010\u00be"+
		"\t\u0010\u0001\u0010\u0003\u0010\u00c1\b\u0010\u0001\u0010\u0001\u0010"+
		"\u0001\u0010\u0001\u0010\u0001\u0011\u0004\u0011\u00c8\b\u0011\u000b\u0011"+
		"\f\u0011\u00c9\u0001\u0011\u0001\u0011\u0007G]s\u0087\u009c\u00b0\u00bc"+
		"\u0000\u0012\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b"+
		"\u0006\r\u0007\u000f\b\u0011\u0000\u0013\t\u0015\n\u0017\u0000\u0019\u000b"+
		"\u001b\f\u001d\r\u001f\u000e!\u000f#\u0010\u0001\u0000\u0006\u0001\u0000"+
		"19\u0001\u000009\r\u0000--ADGHKKMNRWYYadghkkmnrwyy\u0002\u0000()..\u0002"+
		"\u0000\n\n\r\r\u0003\u0000\t\n\r\r  \u00dd\u0000\u0001\u0001\u0000\u0000"+
		"\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000"+
		"\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000"+
		"\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000"+
		"\u000f\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000"+
		"\u0015\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000"+
		"\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000"+
		"\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001"+
		"\u0000\u0000\u0000\u0001%\u0001\u0000\u0000\u0000\u0003\'\u0001\u0000"+
		"\u0000\u0000\u0005)\u0001\u0000\u0000\u0000\u0007+\u0001\u0000\u0000\u0000"+
		"\t-\u0001\u0000\u0000\u0000\u000b4\u0001\u0000\u0000\u0000\r6\u0001\u0000"+
		"\u0000\u0000\u000f9\u0001\u0000\u0000\u0000\u0011=\u0001\u0000\u0000\u0000"+
		"\u0013@\u0001\u0000\u0000\u0000\u0015G\u0001\u0000\u0000\u0000\u0017e"+
		"\u0001\u0000\u0000\u0000\u0019g\u0001\u0000\u0000\u0000\u001b{\u0001\u0000"+
		"\u0000\u0000\u001d\u008f\u0001\u0000\u0000\u0000\u001f\u00a4\u0001\u0000"+
		"\u0000\u0000!\u00b8\u0001\u0000\u0000\u0000#\u00c7\u0001\u0000\u0000\u0000"+
		"%&\u0005;\u0000\u0000&\u0002\u0001\u0000\u0000\u0000\'(\u0005(\u0000\u0000"+
		"(\u0004\u0001\u0000\u0000\u0000)*\u0005,\u0000\u0000*\u0006\u0001\u0000"+
		"\u0000\u0000+,\u0005)\u0000\u0000,\b\u0001\u0000\u0000\u0000-1\u0007\u0000"+
		"\u0000\u0000.0\u0007\u0001\u0000\u0000/.\u0001\u0000\u0000\u000003\u0001"+
		"\u0000\u0000\u00001/\u0001\u0000\u0000\u000012\u0001\u0000\u0000\u0000"+
		"2\n\u0001\u0000\u0000\u000031\u0001\u0000\u0000\u000045\u00050\u0000\u0000"+
		"5\f\u0001\u0000\u0000\u000067\u0007\u0002\u0000\u00007\u000e\u0001\u0000"+
		"\u0000\u00008:\u0003\r\u0006\u000098\u0001\u0000\u0000\u0000:;\u0001\u0000"+
		"\u0000\u0000;9\u0001\u0000\u0000\u0000;<\u0001\u0000\u0000\u0000<\u0010"+
		"\u0001\u0000\u0000\u0000=>\u0007\u0003\u0000\u0000>\u0012\u0001\u0000"+
		"\u0000\u0000?A\u0003\u0011\b\u0000@?\u0001\u0000\u0000\u0000AB\u0001\u0000"+
		"\u0000\u0000B@\u0001\u0000\u0000\u0000BC\u0001\u0000\u0000\u0000C\u0014"+
		"\u0001\u0000\u0000\u0000DF\u0003\u0017\u000b\u0000ED\u0001\u0000\u0000"+
		"\u0000FI\u0001\u0000\u0000\u0000GH\u0001\u0000\u0000\u0000GE\u0001\u0000"+
		"\u0000\u0000HX\u0001\u0000\u0000\u0000IG\u0001\u0000\u0000\u0000JK\u0005"+
		"E\u0000\u0000KL\u0005N\u0000\u0000LM\u0005E\u0000\u0000MN\u0005R\u0000"+
		"\u0000NO\u0005G\u0000\u0000OY\u0005Y\u0000\u0000PQ\u0005E\u0000\u0000"+
		"QR\u0005n\u0000\u0000RS\u0005e\u0000\u0000ST\u0005r\u0000\u0000TU\u0005"+
		"g\u0000\u0000UY\u0005y\u0000\u0000VW\u0005d\u0000\u0000WY\u0005G\u0000"+
		"\u0000XJ\u0001\u0000\u0000\u0000XP\u0001\u0000\u0000\u0000XV\u0001\u0000"+
		"\u0000\u0000Y]\u0001\u0000\u0000\u0000Z\\\t\u0000\u0000\u0000[Z\u0001"+
		"\u0000\u0000\u0000\\_\u0001\u0000\u0000\u0000]^\u0001\u0000\u0000\u0000"+
		"][\u0001\u0000\u0000\u0000^a\u0001\u0000\u0000\u0000_]\u0001\u0000\u0000"+
		"\u0000`b\u0005\r\u0000\u0000a`\u0001\u0000\u0000\u0000ab\u0001\u0000\u0000"+
		"\u0000bc\u0001\u0000\u0000\u0000cd\u0005\n\u0000\u0000d\u0016\u0001\u0000"+
		"\u0000\u0000ef\b\u0004\u0000\u0000f\u0018\u0001\u0000\u0000\u0000gh\u0005"+
		"F\u0000\u0000hi\u0005i\u0000\u0000ij\u0005l\u0000\u0000jk\u0005e\u0000"+
		"\u0000kl\u0005n\u0000\u0000lm\u0005a\u0000\u0000mn\u0005m\u0000\u0000"+
		"no\u0005e\u0000\u0000os\u0001\u0000\u0000\u0000pr\t\u0000\u0000\u0000"+
		"qp\u0001\u0000\u0000\u0000ru\u0001\u0000\u0000\u0000st\u0001\u0000\u0000"+
		"\u0000sq\u0001\u0000\u0000\u0000tw\u0001\u0000\u0000\u0000us\u0001\u0000"+
		"\u0000\u0000vx\u0005\r\u0000\u0000wv\u0001\u0000\u0000\u0000wx\u0001\u0000"+
		"\u0000\u0000xy\u0001\u0000\u0000\u0000yz\u0005\n\u0000\u0000z\u001a\u0001"+
		"\u0000\u0000\u0000{|\u0005O\u0000\u0000|}\u0005r\u0000\u0000}~\u0005g"+
		"\u0000\u0000~\u007f\u0005a\u0000\u0000\u007f\u0080\u0005n\u0000\u0000"+
		"\u0080\u0081\u0005i\u0000\u0000\u0081\u0082\u0005s\u0000\u0000\u0082\u0083"+
		"\u0005m\u0000\u0000\u0083\u0087\u0001\u0000\u0000\u0000\u0084\u0086\t"+
		"\u0000\u0000\u0000\u0085\u0084\u0001\u0000\u0000\u0000\u0086\u0089\u0001"+
		"\u0000\u0000\u0000\u0087\u0088\u0001\u0000\u0000\u0000\u0087\u0085\u0001"+
		"\u0000\u0000\u0000\u0088\u008b\u0001\u0000\u0000\u0000\u0089\u0087\u0001"+
		"\u0000\u0000\u0000\u008a\u008c\u0005\r\u0000\u0000\u008b\u008a\u0001\u0000"+
		"\u0000\u0000\u008b\u008c\u0001\u0000\u0000\u0000\u008c\u008d\u0001\u0000"+
		"\u0000\u0000\u008d\u008e\u0005\n\u0000\u0000\u008e\u001c\u0001\u0000\u0000"+
		"\u0000\u008f\u0090\u0005A\u0000\u0000\u0090\u0091\u0005c\u0000\u0000\u0091"+
		"\u0092\u0005c\u0000\u0000\u0092\u0093\u0005e\u0000\u0000\u0093\u0094\u0005"+
		"s\u0000\u0000\u0094\u0095\u0005s\u0000\u0000\u0095\u0096\u0005i\u0000"+
		"\u0000\u0096\u0097\u0005o\u0000\u0000\u0097\u0098\u0005n\u0000\u0000\u0098"+
		"\u009c\u0001\u0000\u0000\u0000\u0099\u009b\t\u0000\u0000\u0000\u009a\u0099"+
		"\u0001\u0000\u0000\u0000\u009b\u009e\u0001\u0000\u0000\u0000\u009c\u009d"+
		"\u0001\u0000\u0000\u0000\u009c\u009a\u0001\u0000\u0000\u0000\u009d\u00a0"+
		"\u0001\u0000\u0000\u0000\u009e\u009c\u0001\u0000\u0000\u0000\u009f\u00a1"+
		"\u0005\r\u0000\u0000\u00a0\u009f\u0001\u0000\u0000\u0000\u00a0\u00a1\u0001"+
		"\u0000\u0000\u0000\u00a1\u00a2\u0001\u0000\u0000\u0000\u00a2\u00a3\u0005"+
		"\n\u0000\u0000\u00a3\u001e\u0001\u0000\u0000\u0000\u00a4\u00a5\u0005C"+
		"\u0000\u0000\u00a5\u00a6\u0005i\u0000\u0000\u00a6\u00a7\u0005t\u0000\u0000"+
		"\u00a7\u00a8\u0005a\u0000\u0000\u00a8\u00a9\u0005t\u0000\u0000\u00a9\u00aa"+
		"\u0005i\u0000\u0000\u00aa\u00ab\u0005o\u0000\u0000\u00ab\u00ac\u0005n"+
		"\u0000\u0000\u00ac\u00b0\u0001\u0000\u0000\u0000\u00ad\u00af\t\u0000\u0000"+
		"\u0000\u00ae\u00ad\u0001\u0000\u0000\u0000\u00af\u00b2\u0001\u0000\u0000"+
		"\u0000\u00b0\u00b1\u0001\u0000\u0000\u0000\u00b0\u00ae\u0001\u0000\u0000"+
		"\u0000\u00b1\u00b4\u0001\u0000\u0000\u0000\u00b2\u00b0\u0001\u0000\u0000"+
		"\u0000\u00b3\u00b5\u0005\r\u0000\u0000\u00b4\u00b3\u0001\u0000\u0000\u0000"+
		"\u00b4\u00b5\u0001\u0000\u0000\u0000\u00b5\u00b6\u0001\u0000\u0000\u0000"+
		"\u00b6\u00b7\u0005\n\u0000\u0000\u00b7 \u0001\u0000\u0000\u0000\u00b8"+
		"\u00bc\u0005#\u0000\u0000\u00b9\u00bb\t\u0000\u0000\u0000\u00ba\u00b9"+
		"\u0001\u0000\u0000\u0000\u00bb\u00be\u0001\u0000\u0000\u0000\u00bc\u00bd"+
		"\u0001\u0000\u0000\u0000\u00bc\u00ba\u0001\u0000\u0000\u0000\u00bd\u00c0"+
		"\u0001\u0000\u0000\u0000\u00be\u00bc\u0001\u0000\u0000\u0000\u00bf\u00c1"+
		"\u0005\r\u0000\u0000\u00c0\u00bf\u0001\u0000\u0000\u0000\u00c0\u00c1\u0001"+
		"\u0000\u0000\u0000\u00c1\u00c2\u0001\u0000\u0000\u0000\u00c2\u00c3\u0005"+
		"\n\u0000\u0000\u00c3\u00c4\u0001\u0000\u0000\u0000\u00c4\u00c5\u0006\u0010"+
		"\u0000\u0000\u00c5\"\u0001\u0000\u0000\u0000\u00c6\u00c8\u0007\u0005\u0000"+
		"\u0000\u00c7\u00c6\u0001\u0000\u0000\u0000\u00c8\u00c9\u0001\u0000\u0000"+
		"\u0000\u00c9\u00c7\u0001\u0000\u0000\u0000\u00c9\u00ca\u0001\u0000\u0000"+
		"\u0000\u00ca\u00cb\u0001\u0000\u0000\u0000\u00cb\u00cc\u0006\u0011\u0000"+
		"\u0000\u00cc$\u0001\u0000\u0000\u0000\u0013\u00001;BGX]asw\u0087\u008b"+
		"\u009c\u00a0\u00b0\u00b4\u00bc\u00c0\u00c9\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}