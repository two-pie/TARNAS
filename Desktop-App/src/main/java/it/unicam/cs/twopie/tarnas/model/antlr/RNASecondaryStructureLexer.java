// Generated from java-escape by ANTLR 4.11.1

package it.unicam.cs.twopie.tarnas.model.antlr;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class RNASecondaryStructureLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, INDEX=5, ZERO_INDEX=6, BPSEQCTLINES=7, 
		LINECT=8, NUCLEOTIDE=9, EDBN=10, LINE1BPSEQCT=11, LINE2BPSEQCT=12, LINE3BPSEQCT=13, 
		LINE4BPSEQCT=14, COMMENT=15, WS=16;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "INDEX", "ZERO_INDEX", "BPSEQCTLINES", 
			"LINECT", "NONEWLINE", "IUPAC_CODE", "NUCLEOTIDE", "NON_STANDARD_CODE", 
			"EDBN_CODE", "EDBN", "LINE1BPSEQCT", "LINE2BPSEQCT", "LINE3BPSEQCT", 
			"LINE4BPSEQCT", "COMMENT", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "';'", "'('", "','", "')'", null, "'0'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, "INDEX", "ZERO_INDEX", "BPSEQCTLINES", 
			"LINECT", "NUCLEOTIDE", "EDBN", "LINE1BPSEQCT", "LINE2BPSEQCT", "LINE3BPSEQCT", 
			"LINE4BPSEQCT", "COMMENT", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public RNASecondaryStructureLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "RNASecondaryStructure.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0010\u00d8\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0001\u0000\u0001\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003"+
		"\u0001\u0004\u0001\u0004\u0005\u00044\b\u0004\n\u0004\f\u00047\t\u0004"+
		"\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0007\u0005\u0007A\b\u0007\n\u0007\f\u0007D\t\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0003\u0007T\b\u0007\u0001\u0007\u0005\u0007"+
		"W\b\u0007\n\u0007\f\u0007Z\t\u0007\u0001\u0007\u0003\u0007]\b\u0007\u0001"+
		"\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0004"+
		"\ng\b\n\u000b\n\f\nh\u0001\u000b\u0001\u000b\u0001\f\u0003\fn\b\f\u0001"+
		"\r\u0004\rq\b\r\u000b\r\f\rr\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0005\u000e\u007f\b\u000e\n\u000e\f\u000e\u0082\t\u000e\u0001\u000e"+
		"\u0003\u000e\u0085\b\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0005\u000f\u0093\b\u000f\n\u000f\f\u000f\u0096"+
		"\t\u000f\u0001\u000f\u0003\u000f\u0099\b\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010"+
		"\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0005\u0010"+
		"\u00a8\b\u0010\n\u0010\f\u0010\u00ab\t\u0010\u0001\u0010\u0003\u0010\u00ae"+
		"\b\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0001"+
		"\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001"+
		"\u0011\u0005\u0011\u00bc\b\u0011\n\u0011\f\u0011\u00bf\t\u0011\u0001\u0011"+
		"\u0003\u0011\u00c2\b\u0011\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012"+
		"\u0005\u0012\u00c8\b\u0012\n\u0012\f\u0012\u00cb\t\u0012\u0001\u0012\u0003"+
		"\u0012\u00ce\b\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0004\u0013\u00d3"+
		"\b\u0013\u000b\u0013\f\u0013\u00d4\u0001\u0013\u0001\u0013\u0007BX\u0080"+
		"\u0094\u00a9\u00bd\u00c9\u0000\u0014\u0001\u0001\u0003\u0002\u0005\u0003"+
		"\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\u0000\u0013\u0000"+
		"\u0015\t\u0017\u0000\u0019\u0000\u001b\n\u001d\u000b\u001f\f!\r#\u000e"+
		"%\u000f\'\u0010\u0001\u0000\b\u0001\u000019\u0001\u000009\u0002\u0000"+
		"\n\n\r\r\r\u0000--ADGHKKMNRWYYadghkkmnrwyy\r\u0000\"\"++//4477==??IIO"+
		"P[[]]__~~\b\u0000()..<<>>A[]]a{}}\u0002\u0000##>>\u0003\u0000\t\n\r\r"+
		"  \u00e7\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000"+
		"\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000"+
		"\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000"+
		"\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000"+
		"\u0015\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000"+
		"\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000"+
		"!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001"+
		"\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0001)\u0001\u0000"+
		"\u0000\u0000\u0003+\u0001\u0000\u0000\u0000\u0005-\u0001\u0000\u0000\u0000"+
		"\u0007/\u0001\u0000\u0000\u0000\t1\u0001\u0000\u0000\u0000\u000b8\u0001"+
		"\u0000\u0000\u0000\r:\u0001\u0000\u0000\u0000\u000fB\u0001\u0000\u0000"+
		"\u0000\u0011`\u0001\u0000\u0000\u0000\u0013b\u0001\u0000\u0000\u0000\u0015"+
		"f\u0001\u0000\u0000\u0000\u0017j\u0001\u0000\u0000\u0000\u0019m\u0001"+
		"\u0000\u0000\u0000\u001bp\u0001\u0000\u0000\u0000\u001dt\u0001\u0000\u0000"+
		"\u0000\u001f\u0088\u0001\u0000\u0000\u0000!\u009c\u0001\u0000\u0000\u0000"+
		"#\u00b1\u0001\u0000\u0000\u0000%\u00c5\u0001\u0000\u0000\u0000\'\u00d2"+
		"\u0001\u0000\u0000\u0000)*\u0005;\u0000\u0000*\u0002\u0001\u0000\u0000"+
		"\u0000+,\u0005(\u0000\u0000,\u0004\u0001\u0000\u0000\u0000-.\u0005,\u0000"+
		"\u0000.\u0006\u0001\u0000\u0000\u0000/0\u0005)\u0000\u00000\b\u0001\u0000"+
		"\u0000\u000015\u0007\u0000\u0000\u000024\u0007\u0001\u0000\u000032\u0001"+
		"\u0000\u0000\u000047\u0001\u0000\u0000\u000053\u0001\u0000\u0000\u0000"+
		"56\u0001\u0000\u0000\u00006\n\u0001\u0000\u0000\u000075\u0001\u0000\u0000"+
		"\u000089\u00050\u0000\u00009\f\u0001\u0000\u0000\u0000:;\u0003\u001d\u000e"+
		"\u0000;<\u0003\u001f\u000f\u0000<=\u0003!\u0010\u0000=>\u0003#\u0011\u0000"+
		">\u000e\u0001\u0000\u0000\u0000?A\u0003\u0011\b\u0000@?\u0001\u0000\u0000"+
		"\u0000AD\u0001\u0000\u0000\u0000BC\u0001\u0000\u0000\u0000B@\u0001\u0000"+
		"\u0000\u0000CS\u0001\u0000\u0000\u0000DB\u0001\u0000\u0000\u0000EF\u0005"+
		"E\u0000\u0000FG\u0005N\u0000\u0000GH\u0005E\u0000\u0000HI\u0005R\u0000"+
		"\u0000IJ\u0005G\u0000\u0000JT\u0005Y\u0000\u0000KL\u0005E\u0000\u0000"+
		"LM\u0005n\u0000\u0000MN\u0005e\u0000\u0000NO\u0005r\u0000\u0000OP\u0005"+
		"g\u0000\u0000PT\u0005y\u0000\u0000QR\u0005d\u0000\u0000RT\u0005G\u0000"+
		"\u0000SE\u0001\u0000\u0000\u0000SK\u0001\u0000\u0000\u0000SQ\u0001\u0000"+
		"\u0000\u0000TX\u0001\u0000\u0000\u0000UW\t\u0000\u0000\u0000VU\u0001\u0000"+
		"\u0000\u0000WZ\u0001\u0000\u0000\u0000XY\u0001\u0000\u0000\u0000XV\u0001"+
		"\u0000\u0000\u0000Y\\\u0001\u0000\u0000\u0000ZX\u0001\u0000\u0000\u0000"+
		"[]\u0005\r\u0000\u0000\\[\u0001\u0000\u0000\u0000\\]\u0001\u0000\u0000"+
		"\u0000]^\u0001\u0000\u0000\u0000^_\u0005\n\u0000\u0000_\u0010\u0001\u0000"+
		"\u0000\u0000`a\b\u0002\u0000\u0000a\u0012\u0001\u0000\u0000\u0000bc\u0007"+
		"\u0003\u0000\u0000c\u0014\u0001\u0000\u0000\u0000dg\u0003\u0013\t\u0000"+
		"eg\u0003\u0017\u000b\u0000fd\u0001\u0000\u0000\u0000fe\u0001\u0000\u0000"+
		"\u0000gh\u0001\u0000\u0000\u0000hf\u0001\u0000\u0000\u0000hi\u0001\u0000"+
		"\u0000\u0000i\u0016\u0001\u0000\u0000\u0000jk\u0007\u0004\u0000\u0000"+
		"k\u0018\u0001\u0000\u0000\u0000ln\u0007\u0005\u0000\u0000ml\u0001\u0000"+
		"\u0000\u0000n\u001a\u0001\u0000\u0000\u0000oq\u0003\u0019\f\u0000po\u0001"+
		"\u0000\u0000\u0000qr\u0001\u0000\u0000\u0000rp\u0001\u0000\u0000\u0000"+
		"rs\u0001\u0000\u0000\u0000s\u001c\u0001\u0000\u0000\u0000tu\u0005F\u0000"+
		"\u0000uv\u0005i\u0000\u0000vw\u0005l\u0000\u0000wx\u0005e\u0000\u0000"+
		"xy\u0005n\u0000\u0000yz\u0005a\u0000\u0000z{\u0005m\u0000\u0000{|\u0005"+
		"e\u0000\u0000|\u0080\u0001\u0000\u0000\u0000}\u007f\t\u0000\u0000\u0000"+
		"~}\u0001\u0000\u0000\u0000\u007f\u0082\u0001\u0000\u0000\u0000\u0080\u0081"+
		"\u0001\u0000\u0000\u0000\u0080~\u0001\u0000\u0000\u0000\u0081\u0084\u0001"+
		"\u0000\u0000\u0000\u0082\u0080\u0001\u0000\u0000\u0000\u0083\u0085\u0005"+
		"\r\u0000\u0000\u0084\u0083\u0001\u0000\u0000\u0000\u0084\u0085\u0001\u0000"+
		"\u0000\u0000\u0085\u0086\u0001\u0000\u0000\u0000\u0086\u0087\u0005\n\u0000"+
		"\u0000\u0087\u001e\u0001\u0000\u0000\u0000\u0088\u0089\u0005O\u0000\u0000"+
		"\u0089\u008a\u0005r\u0000\u0000\u008a\u008b\u0005g\u0000\u0000\u008b\u008c"+
		"\u0005a\u0000\u0000\u008c\u008d\u0005n\u0000\u0000\u008d\u008e\u0005i"+
		"\u0000\u0000\u008e\u008f\u0005s\u0000\u0000\u008f\u0090\u0005m\u0000\u0000"+
		"\u0090\u0094\u0001\u0000\u0000\u0000\u0091\u0093\t\u0000\u0000\u0000\u0092"+
		"\u0091\u0001\u0000\u0000\u0000\u0093\u0096\u0001\u0000\u0000\u0000\u0094"+
		"\u0095\u0001\u0000\u0000\u0000\u0094\u0092\u0001\u0000\u0000\u0000\u0095"+
		"\u0098\u0001\u0000\u0000\u0000\u0096\u0094\u0001\u0000\u0000\u0000\u0097"+
		"\u0099\u0005\r\u0000\u0000\u0098\u0097\u0001\u0000\u0000\u0000\u0098\u0099"+
		"\u0001\u0000\u0000\u0000\u0099\u009a\u0001\u0000\u0000\u0000\u009a\u009b"+
		"\u0005\n\u0000\u0000\u009b \u0001\u0000\u0000\u0000\u009c\u009d\u0005"+
		"A\u0000\u0000\u009d\u009e\u0005c\u0000\u0000\u009e\u009f\u0005c\u0000"+
		"\u0000\u009f\u00a0\u0005e\u0000\u0000\u00a0\u00a1\u0005s\u0000\u0000\u00a1"+
		"\u00a2\u0005s\u0000\u0000\u00a2\u00a3\u0005i\u0000\u0000\u00a3\u00a4\u0005"+
		"o\u0000\u0000\u00a4\u00a5\u0005n\u0000\u0000\u00a5\u00a9\u0001\u0000\u0000"+
		"\u0000\u00a6\u00a8\t\u0000\u0000\u0000\u00a7\u00a6\u0001\u0000\u0000\u0000"+
		"\u00a8\u00ab\u0001\u0000\u0000\u0000\u00a9\u00aa\u0001\u0000\u0000\u0000"+
		"\u00a9\u00a7\u0001\u0000\u0000\u0000\u00aa\u00ad\u0001\u0000\u0000\u0000"+
		"\u00ab\u00a9\u0001\u0000\u0000\u0000\u00ac\u00ae\u0005\r\u0000\u0000\u00ad"+
		"\u00ac\u0001\u0000\u0000\u0000\u00ad\u00ae\u0001\u0000\u0000\u0000\u00ae"+
		"\u00af\u0001\u0000\u0000\u0000\u00af\u00b0\u0005\n\u0000\u0000\u00b0\""+
		"\u0001\u0000\u0000\u0000\u00b1\u00b2\u0005C\u0000\u0000\u00b2\u00b3\u0005"+
		"i\u0000\u0000\u00b3\u00b4\u0005t\u0000\u0000\u00b4\u00b5\u0005a\u0000"+
		"\u0000\u00b5\u00b6\u0005t\u0000\u0000\u00b6\u00b7\u0005i\u0000\u0000\u00b7"+
		"\u00b8\u0005o\u0000\u0000\u00b8\u00b9\u0005n\u0000\u0000\u00b9\u00bd\u0001"+
		"\u0000\u0000\u0000\u00ba\u00bc\t\u0000\u0000\u0000\u00bb\u00ba\u0001\u0000"+
		"\u0000\u0000\u00bc\u00bf\u0001\u0000\u0000\u0000\u00bd\u00be\u0001\u0000"+
		"\u0000\u0000\u00bd\u00bb\u0001\u0000\u0000\u0000\u00be\u00c1\u0001\u0000"+
		"\u0000\u0000\u00bf\u00bd\u0001\u0000\u0000\u0000\u00c0\u00c2\u0005\r\u0000"+
		"\u0000\u00c1\u00c0\u0001\u0000\u0000\u0000\u00c1\u00c2\u0001\u0000\u0000"+
		"\u0000\u00c2\u00c3\u0001\u0000\u0000\u0000\u00c3\u00c4\u0005\n\u0000\u0000"+
		"\u00c4$\u0001\u0000\u0000\u0000\u00c5\u00c9\u0007\u0006\u0000\u0000\u00c6"+
		"\u00c8\t\u0000\u0000\u0000\u00c7\u00c6\u0001\u0000\u0000\u0000\u00c8\u00cb"+
		"\u0001\u0000\u0000\u0000\u00c9\u00ca\u0001\u0000\u0000\u0000\u00c9\u00c7"+
		"\u0001\u0000\u0000\u0000\u00ca\u00cd\u0001\u0000\u0000\u0000\u00cb\u00c9"+
		"\u0001\u0000\u0000\u0000\u00cc\u00ce\u0005\r\u0000\u0000\u00cd\u00cc\u0001"+
		"\u0000\u0000\u0000\u00cd\u00ce\u0001\u0000\u0000\u0000\u00ce\u00cf\u0001"+
		"\u0000\u0000\u0000\u00cf\u00d0\u0005\n\u0000\u0000\u00d0&\u0001\u0000"+
		"\u0000\u0000\u00d1\u00d3\u0007\u0007\u0000\u0000\u00d2\u00d1\u0001\u0000"+
		"\u0000\u0000\u00d3\u00d4\u0001\u0000\u0000\u0000\u00d4\u00d2\u0001\u0000"+
		"\u0000\u0000\u00d4\u00d5\u0001\u0000\u0000\u0000\u00d5\u00d6\u0001\u0000"+
		"\u0000\u0000\u00d6\u00d7\u0006\u0013\u0000\u0000\u00d7(\u0001\u0000\u0000"+
		"\u0000\u0015\u00005BSX\\fhmr\u0080\u0084\u0094\u0098\u00a9\u00ad\u00bd"+
		"\u00c1\u00c9\u00cd\u00d4\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}